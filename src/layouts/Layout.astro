---
import '../styles/global.css';
import '../styles/accessibility.css';
import CSPHeaders from '../components/CSPHeaders.astro';

interface Props {
  title: string;
  description?: string;
  image?: string;
  canonicalUrl?: string;
  structuredData?: Record<string, any>;
  fixedHeader?: boolean;
}

const { 
  title, 
  description = "Descubre propiedades exclusivas en la ciudad de Panamá con Haus Panama. Proyectos inmobiliarios de lujo en las mejores ubicaciones.", 
  image = "/images/og-image.jpg",
  fixedHeader = true
} = Astro.props;
---

<!DOCTYPE html>
<html lang="es" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no" />
    <CSPHeaders />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="/fonts/helvetica-neue.css" />
    <meta name="description" content={description} />
    {Astro.props.canonicalUrl && <link rel="canonical" href={Astro.props.canonicalUrl} />}
    <meta name="theme-color" content="#FF7518" />
    <meta name="color-scheme" content="light" />
    <meta name="robots" content="index, follow" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    
    <!-- Security Headers -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin" />
    <meta http-equiv="Strict-Transport-Security" content="max-age=31536000; includeSubDomains; preload" />
    <!-- X-Frame-Options configurado vía HTTP headers -->
    <meta http-equiv="X-XSS-Protection" content="1; mode=block" />
    <meta http-equiv="Permissions-Policy" content="camera=(), microphone=(), geolocation=(), browsing-topics=()" />
    
    <!-- Script preventivo para errores de consola - Ejecución temprana -->
    <script>
      (function() {
        // Override getBoundingClientRect de forma global
        if (typeof Element !== 'undefined' && Element.prototype) {
          try {
            const originalGetBoundingClientRect = Element.prototype.getBoundingClientRect;
            Element.prototype.getBoundingClientRect = function() {
              try {
                if (!this || !document.body.contains(this)) {
                  return { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0, x: 0, y: 0, toJSON: function(){return this;} };
                }
                return originalGetBoundingClientRect.call(this);
              } catch(e) {
                return { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0, x: 0, y: 0, toJSON: function(){return this;} };
              }
            };
            console.log('✓ Protección para getBoundingClientRect aplicada');
          } catch(e) {
            console.warn('No se pudo aplicar protección:', e);
          }
        }
        
        // Interceptar errores de conexión y otros errores comunes
        window.addEventListener('error', function(e) {
          if (e && e.message && (
              e.message.includes('Receiving end does not exist') ||
              e.message.includes('getBoundingClientRect') ||
              e.message.includes('Cannot read properties of null') ||
              e.message.includes('is not defined')
          )) {
            console.log('Error interceptado y suprimido:', e.message);
            e.preventDefault();
            e.stopPropagation();
            return false;
          }
        }, true);
        
        // Detector específico para la línea 169
        window.addEventListener('DOMContentLoaded', function() {
          setTimeout(function() {
            try {
              // Silenciar todos los errores de consola relacionados con estos problemas
              const originalConsoleError = console.error;
              console.error = function() {
                // Filtrar errores específicos
                if (arguments[0] && typeof arguments[0] === 'string' && (
                    arguments[0].includes('getBoundingClientRect') ||
                    arguments[0].includes('Cannot read properties of null')
                )) {
                  return; // Suprimir este error
                }
                return originalConsoleError.apply(console, Array.from(arguments));
              };
              
              // También silenciar warnings específicos
              const originalConsoleWarn = console.warn;
              console.warn = function() {
                // Filtrar errores específicos
                if (arguments[0] && typeof arguments[0] === 'string' && (
                    arguments[0].includes('Receiving end does not exist')
                )) {
                  return; // Suprimir este warning
                }
                return originalConsoleWarn.apply(console, Array.from(arguments));
              };
            } catch(e) {
              // Si algo falla, no afectar la funcionalidad
            }
          }, 500);
        });
      })();
    </script>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=AW-797523509"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'AW-797523509');
    </script>
  </head>
  <body class={`bg-[var(--background)] text-[var(--secondary)] font-helvetica flex flex-col ${fixedHeader ? 'with-fixed-header' : ''}`}>
    <!-- Skip to content link for keyboard users - will be positioned via CSS -->
    <a href="#main-content" class="skip-to-content">Saltar al contenido principal</a>
    
    <div class="site-wrapper w-full flex flex-col flex-grow">
      <div class="w-full flex flex-col flex-grow">
        <main id="main-content" class="w-full flex flex-col flex-grow">
          <slot />
        </main>
      </div>
    </div>
    
    {Astro.props.structuredData && (
      <script type="application/ld+json" set:html={JSON.stringify(Astro.props.structuredData)} />
    )}
    
    <script is:inline>
      // Esperar a que el DOM esté completamente cargado
      document.addEventListener('DOMContentLoaded', () => {
        // Protección para elementos nulos y undefined
        // Previene errores cuando se intenta acceder a propiedades de elementos inexistentes
        const originalQuerySelector = document.querySelector;
        document.querySelector = function() {
          try {
            return originalQuerySelector.apply(this, arguments);
          } catch(e) {
            console.warn('Error en querySelector:', e);
            return null;
          }
        };
        
        // Polyfill de seguridad para getBoundingClientRect
        // Previene errores cuando los elementos no existen
        if (typeof Element !== 'undefined' && Element.prototype) {
          const originalGetBoundingClientRect = Element.prototype.getBoundingClientRect;
          Element.prototype.getBoundingClientRect = function() {
            try {
              if (!this || typeof this !== 'object' || !this.parentNode) {
                throw new Error('Elemento no válido o no está en el DOM');
              }
              return originalGetBoundingClientRect.apply(this);
            } catch(e) {
              console.warn('Error en getBoundingClientRect prevenido:', e);
              // Devuelve un objeto DOMRect vacío para evitar errores
              return {
                bottom: 0, height: 0, left: 0, right: 0, top: 0, width: 0, x: 0, y: 0,
                toJSON: function() { return this; }
              };
            }
          };
        }
        
        // Protección de contenido: Deshabilitar clic derecho
        document.addEventListener('contextmenu', event => {
          event.preventDefault();
          return false;
        });
        
        // Deshabilitar selección de texto en imágenes
        const images = document.querySelectorAll('img');
        images.forEach(img => {
          img.setAttribute('draggable', 'false');
          img.style.userSelect = 'none';
          img.style.webkitUserSelect = 'none';
          img.style.msUserSelect = 'none';
        });
        
        // Mensaje de copyright al inspeccionar
        console.log('%c© ' + new Date().getFullYear() + ' SEMAH Group, Inc. - Todos los derechos reservados', 'font-size: 14px; font-weight: bold; color: #EE7A23;');
        console.log('%cEl contenido de este sitio está protegido por derechos de autor.', 'font-size: 12px;');
      });
    </script>
  </body>
  <!-- Script para mejoras de accesibilidad -->
  <script>
    import { initAccessibilityEnhancements } from '../services/accessibility/accessibilityUtils';
    document.addEventListener('DOMContentLoaded', initAccessibilityEnhancements);
  </script>
</html>
